{"version":3,"sources":["BooksAPI.js","Book.js","Shelf.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","this","props","onChangeShelf","_this","react_default","a","createElement","react","key","className","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","e","updateBook","target","disabled","title","authors","React","Component","Shelf","state","mounted","_this2","_this$props","shelfTitle","replace","str","toUpperCase","TransitionGroup","component","filter","map","CSSTransition","in","timeout","classNames","src_Book","Search","searchBooks","setState","trim","BooksAPI","error","b","react_router_dom","to","type","placeholder","App","changeShelf","_this3","location","history","react_router","exact","path","render","src_Shelf","src_Search","withRouter","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9856600c.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Fragment } from \"react\";\nimport \"./App.css\";\n\nclass Book extends React.Component {\n  updateBook(shelf) {\n    this.props.onChangeShelf(this.props.book, shelf);\n  }\n\n  render() {\n    const { book } = this.props;\n    return (\n      <Fragment>\n        <li key={book.id}>\n          <div className='book'>\n            <div className='book-top'>\n              <div\n                className='book-cover'\n                style={{\n                  width: 128,\n                  height: 193,\n                  backgroundImage: `url(${book.imageLinks.thumbnail})`,\n                }}\n              />\n              <div className='book-shelf-changer'>\n                <select\n                  value={book.shelf}\n                  onChange={(e) => this.updateBook(e.target.value)}\n                >\n                  <option value='move' disabled>\n                    Move to...\n                  </option>\n                  <option value='currentlyReading'>Currently Reading</option>\n                  <option value='wantToRead'>Want to Read</option>\n                  <option value='read'>Read</option>\n                  <option value='none'>None</option>\n                </select>\n              </div>\n            </div>\n            <div className='book-title'>{book.title}</div>\n            <div className='book-authors'>{book.authors}</div>\n          </div>\n        </li>\n      </Fragment>\n    );\n  }\n}\n\nexport default Book;\n","import React from \"react\";\nimport Book from \"./Book\";\nimport \"./App.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass Shelf extends React.Component {\n  state = {\n    mounted: false,\n  };\n\n  render() {\n    const { shelf, books } = this.props;\n    const shelfTitle = shelf\n      .replace(/([A-Z])/g, \" $1\")\n      .replace(/^./, function(str) {\n        return str.toUpperCase();\n      });\n    return (\n      <div className='bookshelf'>\n        <h2 className='bookshelf-title'>{shelfTitle}</h2>\n        <div className='bookshelf-books'>\n          <ol className='books-grid'>\n            <TransitionGroup component={null}>\n              {books\n                .filter((books) => books.shelf === shelf)\n                .map((book) => (\n                  <CSSTransition\n                    in={this.state.mounted}\n                    timeout={500}\n                    key={book.id}\n                    classNames='fade'\n                  >\n                    <Book\n                      onChangeShelf={this.props.onChangeShelf}\n                      key={book.id}\n                      book={book}\n                    />\n                  </CSSTransition>\n                ))}\n            </TransitionGroup>\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shelf;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\n\nclass Search extends React.Component {\n  state = {\n    query: \"\",\n    books: [],\n  };\n\n  searchBooks = (query) => {\n    if (!query) {\n      this.setState({ query: \"\", books: [] });\n    } else {\n      this.setState({ query: query.trim() });\n      BooksAPI.search(query).then((books) => {\n        if (books.error) {\n          books = [];\n        }\n        books.map((book) =>\n          this.props.books\n            .filter((b) => b.id === book.id)\n            .map((b) => (book.shelf = b.shelf))\n        );\n        this.setState({ books });\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className='search-books'>\n        <div className='search-books-bar'>\n          <Link to='/'>\n            <button className='close-search'>Close</button>\n          </Link>\n          <div className='search-books-input-wrapper'>\n            <input\n              onChange={(e) => this.searchBooks(e.target.value)}\n              type='text'\n              placeholder='Search by title or author'\n            />\n          </div>\n        </div>\n        <div className='search-books-results'>\n          <ol className='books-grid'>\n            {this.state.books.map((book) => (\n              <Book\n                onChangeShelf={this.props.onChangeShelf}\n                key={book.id}\n                book={book}\n              />\n            ))}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { Route, Link, Switch, withRouter } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./App.css\";\nimport Shelf from \"./Shelf\";\nimport Search from \"./Search\";\n\nclass App extends React.Component {\n  state = {\n    books: [],\n  };\n\n  changeShelf = (book, shelf) => {\n    if (this.state.books) {\n      BooksAPI.update(book, shelf).then(() => {\n        book.shelf = shelf;\n        this.setState((state) => ({\n          books: state.books.filter((b) => b.id !== book.id).concat([book]),\n        }));\n      });\n    }\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState(() => ({\n        books,\n      }));\n    });\n  }\n\n  render() {\n    const { books } = this.state;\n    const { location, history } = this.props;\n    return (\n      <TransitionGroup>\n        <CSSTransition key={location.key} classNames={\"fade\"} timeout={1000}>\n          <Switch history={history}>\n            <Route\n              exact\n              path='/'\n              render={() => (\n                <div className='app'>\n                  <div className='list-books'>\n                    <div className='list-books-title'>\n                      <h1>MyBookshelf</h1>\n                    </div>\n                    <div className='list-books-content'>\n                      <Shelf\n                        shelf={\"currentlyReading\"}\n                        books={books}\n                        onChangeShelf={this.changeShelf}\n                      />\n                      <Shelf\n                        shelf={\"wantToRead\"}\n                        books={books}\n                        onChangeShelf={this.changeShelf}\n                      />\n                      <Shelf\n                        shelf={\"read\"}\n                        books={books}\n                        onChangeShelf={this.changeShelf}\n                      />\n                    </div>\n                    <div className='open-search'>\n                      <Link to='/search'>\n                        <button>Add a book</button>\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              )}\n            />\n            <Route\n              path='/search'\n              render={() => (\n                <Search onChangeShelf={this.changeShelf} books={books} />\n              )}\n            />\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}